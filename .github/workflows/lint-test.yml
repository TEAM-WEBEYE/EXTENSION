name: Lint and Test

on:
  pull_request:
    branches: [ main ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'yarn'

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Run linting
      id: lint
      run: yarn lint
      continue-on-error: true

    - name: Run tests with coverage
      id: test
      run: yarn test --coverage
      continue-on-error: true

    - name: Generate test summary
      if: always()
      uses: actions/github-script@v7
      GITHUB_TOKEN: ${{ secrets.ACTIONS_DEPLOY_KEY }}
      with:
        env:
          LINT_STATUS: ${{ steps.lint.outcome }}
          TEST_STATUS: ${{ steps.test.outcome }}
        script: |
          const fs = require('fs');
          try {
            // 커버리지 결과 파일이 있는지 확인
            const coverageSummary = fs.existsSync('./coverage/coverage-summary.json') 
              ? JSON.parse(fs.readFileSync('./coverage/coverage-summary.json', 'utf8'))
              : null;
            
            let summaryMessage = `### Lint and Test Results\n\n`;
            
            // Lint 결과
            summaryMessage += `#### Lint Status: ${lintOutcome === 'success' ? '✅ Passed' : '❌ Failed'}\n\n`;
            
            // 테스트 결과
            summaryMessage += `#### Test Status: ${testOutcome === 'success' ? '✅ Passed' : '❌ Failed'}\n\n`;
            
            // 커버리지 결과가 있으면 추가
            if (coverageSummary && coverageSummary.total) {
              const total = coverageSummary.total;
              summaryMessage += `#### Coverage Summary:\n`;
              summaryMessage += `| Category | Coverage |\n`;
              summaryMessage += `| -------- | -------- |\n`;
              summaryMessage += `| Statements | ${total.statements.pct}% |\n`;
              summaryMessage += `| Branches | ${total.branches.pct}% |\n`;
              summaryMessage += `| Functions | ${total.functions.pct}% |\n`;
              summaryMessage += `| Lines | ${total.lines.pct}% |\n\n`;
            }
            
            // 요약 작성 (core.summary는 미리 정의되어 있음)
            summary
              .addHeading('Lint and Test Results')
              .addRaw(summaryMessage)
              .write();
              
          } catch (error) {
            console.error('Error generating summary:', error);
          }

    - name: Report test results as PR comment
      if: always()
      uses: marocchino/sticky-pull-request-comment@v2
      with:
        header: test-results
        message: |
          ### Lint and Test Results
          
          #### Lint Status: ${{ steps.lint.outcome == 'success' && '✅ Passed' || '❌ Failed' }}
          
          #### Test Status: ${{ steps.test.outcome == 'success' && '✅ Passed' || '❌ Failed' }}
          
          <details>
            <summary>Show Details</summary>
            
            The detailed test results are available in the GitHub Actions output.
            Check the artifacts for complete coverage report.
          </details>

    - name: Save coverage report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-coverage
        path: coverage/
        retention-days: 7

    - name: Check if lint and tests passed
      if: steps.lint.outcome != 'success' || steps.test.outcome != 'success'
      run: exit 1
