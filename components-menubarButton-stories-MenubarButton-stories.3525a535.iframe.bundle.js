"use strict";(self.webpackChunkvoim=self.webpackChunkvoim||[]).push([[639],{"./src/components/checkmarkIcon/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>CheckmarkIcon});var react=__webpack_require__("./node_modules/react/index.js"),ThemeContext=__webpack_require__("./src/contexts/ThemeContext.tsx");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}function CheckmarkIcon(props){const{theme:themeMode}=(0,ThemeContext.o3)(),isDarkMode="dark"===themeMode;return react.createElement("svg",_extends({},props,{xmlns:"http://www.w3.org/2000/svg",width:34,height:34,viewBox:"0 0 34 34",fill:"none"}),react.createElement("circle",{cx:"17",cy:"17",r:"15",fill:isDarkMode?"#323335":"#fefefe"}),react.createElement("path",{d:"M14.9 19.7L11.675 16.475C11.4 16.2 11.05 16.0625 10.625 16.0625C10.2 16.0625 9.85 16.2 9.575 16.475C9.3 16.75 9.1625 17.1 9.1625 17.525C9.1625 17.95 9.3 18.3 9.575 18.575L13.85 22.85C14.15 23.15 14.5 23.3 14.9 23.3C15.3 23.3 15.65 23.15 15.95 22.85L24.425 14.375C24.7 14.1 24.8375 13.75 24.8375 13.325C24.8375 12.9 24.7 12.55 24.425 12.275C24.15 12 23.8 11.8625 23.375 11.8625C22.95 11.8625 22.6 12 22.325 12.275L14.9 19.7ZM17 32C14.925 32 12.975 31.606 11.15 30.818C9.325 30.03 7.7375 28.9615 6.3875 27.6125C5.0375 26.2635 3.969 24.676 3.182 22.85C2.395 21.024 2.001 19.074 2 17C1.999 14.926 2.393 12.976 3.182 11.15C3.971 9.324 5.0395 7.7365 6.3875 6.3875C7.7355 5.0385 9.323 3.97 11.15 3.182C12.977 2.394 14.927 2 17 2C19.073 2 21.023 2.394 22.85 3.182C24.677 3.97 26.2645 5.0385 27.6125 6.3875C28.9605 7.7365 30.0295 9.324 30.8195 11.15C31.6095 12.976 32.003 14.926 32 17C31.997 19.074 31.603 21.024 30.818 22.85C30.033 24.676 28.9645 26.2635 27.6125 27.6125C26.2605 28.9615 24.673 30.0305 22.85 30.8195C21.027 31.6085 19.077 32.002 17 32Z",fill:isDarkMode?"#B872FF":"#8914FF"}))}},"./src/components/menubarButton/component.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{j:()=>MenubarButton});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_src_contexts_ThemeContext__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/contexts/ThemeContext.tsx"),_checkmarkIcon__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/checkmarkIcon/index.ts");function MenubarButton({isSelected,text,onClick,ariaLabel}){const{theme,fontClasses}=(0,_src_contexts_ThemeContext__WEBPACK_IMPORTED_MODULE_1__.o3)(),isDarkMode="dark"===theme;return react__WEBPACK_IMPORTED_MODULE_0__.createElement("button",{onClick,className:`${fontClasses.fontHeading} font-koddi flex items-center justify-between rounded-[14px] w-[420px] h-[88px] p-5 \n                ${isSelected?isDarkMode?"bg-grayscale-900 text-grayscale-100 border-4 border-solid border-purple-light":"bg-grayscale-100 text-grayscale-900 border-4 border-solid border-purple-default":isDarkMode?"bg-grayscale-900 text-grayscale-100 hover:opacity-30":"bg-grayscale-100 text-grayscale-900 hover:opacity-30"}`,role:"menuitem","aria-label":ariaLabel,tabIndex:0,"aria-selected":isSelected,"aria-controls":"menubar","aria-haspopup":"menu"},text,isSelected&&react__WEBPACK_IMPORTED_MODULE_0__.createElement(_checkmarkIcon__WEBPACK_IMPORTED_MODULE_2__.N,{"data-testid":"checkmark-icon"}))}},"./src/components/menubarButton/stories/MenubarButton.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DarkMode:()=>DarkMode,DarkModeSelected:()=>DarkModeSelected,Default:()=>Default,LongText:()=>LongText,Selected:()=>Selected,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_component__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/menubarButton/component.tsx"),_src_contexts_ThemeContext__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/contexts/ThemeContext.tsx");const ThemeWrapper=({theme="light",children})=>("undefined"!=typeof window&&window.localStorage&&localStorage.setItem("theme-mode",theme),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_src_contexts_ThemeContext__WEBPACK_IMPORTED_MODULE_2__.oR,null,children)),__WEBPACK_DEFAULT_EXPORT__={title:"Components/MenubarButton",component:_component__WEBPACK_IMPORTED_MODULE_1__.j,parameters:{layout:"centered"},tags:["autodocs"],argTypes:{isSelected:{control:"boolean",description:"버튼의 선택 상태"},text:{control:"text",description:"버튼에 표시될 텍스트"},ariaLabel:{control:"text",description:"접근성을 위한 aria-label 속성"},onClick:{action:"clicked",description:"클릭 이벤트 핸들러"}},decorators:[Story=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{padding:"1rem"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(Story,null))]},Default={args:{isSelected:!1,text:"메뉴 항목",ariaLabel:"메뉴 항목 버튼"},decorators:[Story=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(ThemeWrapper,{theme:"light"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(Story,null))]},Selected={args:{isSelected:!0,text:"메뉴 항목",ariaLabel:"메뉴 항목 버튼"},decorators:[Story=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(ThemeWrapper,{theme:"light"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(Story,null))]},DarkMode={args:{isSelected:!1,text:"메뉴 항목",ariaLabel:"메뉴 항목 버튼"},parameters:{backgrounds:{default:"dark"}},decorators:[Story=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(ThemeWrapper,{theme:"dark"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{padding:"1rem",backgroundColor:"#333",borderRadius:"8px"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(Story,null)))]},DarkModeSelected={args:{isSelected:!0,text:"메뉴 항목",ariaLabel:"메뉴 항목 버튼"},parameters:{backgrounds:{default:"dark"}},decorators:[Story=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(ThemeWrapper,{theme:"dark"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{padding:"1rem",backgroundColor:"#333",borderRadius:"8px"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(Story,null)))]},LongText={args:{isSelected:!1,text:"이것은 매우 긴 메뉴 항목 텍스트입니다. 텍스트가 넘칠 때 어떻게 보이는지 확인하세요.",ariaLabel:"긴 텍스트 버튼"},decorators:[Story=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(ThemeWrapper,{theme:"light"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(Story,null))]},__namedExportsOrder=["Default","Selected","DarkMode","DarkModeSelected","LongText"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  args: {\n    isSelected: false,\n    text: "메뉴 항목",\n    ariaLabel: "메뉴 항목 버튼"\n  },\n  decorators: [Story => <ThemeWrapper theme="light">\n                <Story />\n            </ThemeWrapper>]\n}',...Default.parameters?.docs?.source}}},Selected.parameters={...Selected.parameters,docs:{...Selected.parameters?.docs,source:{originalSource:'{\n  args: {\n    isSelected: true,\n    text: "메뉴 항목",\n    ariaLabel: "메뉴 항목 버튼"\n  },\n  decorators: [Story => <ThemeWrapper theme="light">\n                <Story />\n            </ThemeWrapper>]\n}',...Selected.parameters?.docs?.source}}},DarkMode.parameters={...DarkMode.parameters,docs:{...DarkMode.parameters?.docs,source:{originalSource:'{\n  args: {\n    isSelected: false,\n    text: "메뉴 항목",\n    ariaLabel: "메뉴 항목 버튼"\n  },\n  parameters: {\n    backgrounds: {\n      default: "dark"\n    }\n  },\n  decorators: [Story => <ThemeWrapper theme="dark">\n                <div style={{\n      padding: "1rem",\n      backgroundColor: "#333",\n      borderRadius: "8px"\n    }}>\n                    <Story />\n                </div>\n            </ThemeWrapper>]\n}',...DarkMode.parameters?.docs?.source}}},DarkModeSelected.parameters={...DarkModeSelected.parameters,docs:{...DarkModeSelected.parameters?.docs,source:{originalSource:'{\n  args: {\n    isSelected: true,\n    text: "메뉴 항목",\n    ariaLabel: "메뉴 항목 버튼"\n  },\n  parameters: {\n    backgrounds: {\n      default: "dark"\n    }\n  },\n  decorators: [Story => <ThemeWrapper theme="dark">\n                <div style={{\n      padding: "1rem",\n      backgroundColor: "#333",\n      borderRadius: "8px"\n    }}>\n                    <Story />\n                </div>\n            </ThemeWrapper>]\n}',...DarkModeSelected.parameters?.docs?.source}}},LongText.parameters={...LongText.parameters,docs:{...LongText.parameters?.docs,source:{originalSource:'{\n  args: {\n    isSelected: false,\n    text: "이것은 매우 긴 메뉴 항목 텍스트입니다. 텍스트가 넘칠 때 어떻게 보이는지 확인하세요.",\n    ariaLabel: "긴 텍스트 버튼"\n  },\n  decorators: [Story => <ThemeWrapper theme="light">\n                <Story />\n            </ThemeWrapper>]\n}',...LongText.parameters?.docs?.source}}}}}]);