"use strict";(self.webpackChunkvoim=self.webpackChunkvoim||[]).push([[805],{"./src/components/cursorButton/stories/CursorButton.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ColorGrid:()=>ColorGrid,DarkMode:()=>DarkMode,Default:()=>Default,LargeSize:()=>LargeSize,PurpleCursor:()=>PurpleCursor,Selected:()=>Selected,SmallSize:()=>SmallSize,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_src_contexts_ThemeContext__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/contexts/ThemeContext.tsx");const mockUrls={"cursors/white_small.png":"/mockCursors/white_small.png","cursors/white_medium.png":"/mockCursors/white_medium.png","cursors/white_large.png":"/mockCursors/white_large.png","cursors/purple_small.png":"/mockCursors/purple_small.png","cursors/purple_medium.png":"/mockCursors/purple_medium.png","cursors/purple_large.png":"/mockCursors/purple_large.png","cursors/yellow_small.png":"/mockCursors/yellow_small.png","cursors/yellow_medium.png":"/mockCursors/yellow_medium.png","cursors/yellow_large.png":"/mockCursors/yellow_large.png","cursors/mint_small.png":"/mockCursors/mint_small.png","cursors/mint_medium.png":"/mockCursors/mint_medium.png","cursors/mint_large.png":"/mockCursors/mint_large.png","cursors/pink_small.png":"/mockCursors/pink_small.png","cursors/pink_medium.png":"/mockCursors/pink_medium.png","cursors/pink_large.png":"/mockCursors/pink_large.png","cursors/black_small.png":"/mockCursors/black_small.png","cursors/black_medium.png":"/mockCursors/black_medium.png","cursors/black_large.png":"/mockCursors/black_large.png"},ThemeWrapper=({theme="light",children})=>("undefined"!=typeof window&&window.localStorage&&localStorage.setItem("theme-mode",theme),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_src_contexts_ThemeContext__WEBPACK_IMPORTED_MODULE_1__.oR,null,children)),MockGetExtensionUrlWrapper=({children})=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,children),AllProviders=({theme="light",children})=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(ThemeWrapper,{theme},react__WEBPACK_IMPORTED_MODULE_0__.createElement(MockGetExtensionUrlWrapper,null,children)),MockedCursorButton=props=>{const{onClick,color="white",size="medium",isSelected=!1}=props,[theme,setTheme]=react__WEBPACK_IMPORTED_MODULE_0__.useState("light");react__WEBPACK_IMPORTED_MODULE_0__.useEffect((()=>{if("undefined"!=typeof window&&window.localStorage){const storedTheme=localStorage.getItem("theme-mode");storedTheme&&setTheme(storedTheme)}}),[]);const isDarkMode="dark"===theme,fileName=`cursors/${color}_${size}.png`;return react__WEBPACK_IMPORTED_MODULE_0__.createElement("button",{className:"flex items-center justify-center w-[140px] h-[140px] rounded-[20px] relative "+(isSelected?isDarkMode?"bg-grayscale-800 border-4 border-solid border-purple-light":"bg-grayscale-100 border-4 border-solid border-purple-default":isDarkMode?"bg-grayscale-800 hover:opacity-30":"bg-grayscale-100 hover:opacity-30"),onClick,"aria-label":`커서 변경 버튼: ${size}, ${color}`},react__WEBPACK_IMPORTED_MODULE_0__.createElement("img",{src:(path=fileName,mockUrls[path]||`/api/placeholder/80/80?text=${encodeURIComponent(path)}`),alt:`커서: ${size}, ${color}`}),isSelected&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"absolute -right-[10px] -top-[10px]"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",{width:"24",height:"24",viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("circle",{cx:"12",cy:"12",r:"12",fill:"#9747FF"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M7 12L10 15L17 8",stroke:"white",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"}))));var path},__WEBPACK_DEFAULT_EXPORT__={title:"Components/CursorButton",component:MockedCursorButton,parameters:{layout:"centered"},tags:["autodocs"],argTypes:{color:{control:"select",options:["white","purple","yellow","mint","pink","black"],description:"커서 색상"},size:{control:"select",options:["small","medium","large"],description:"커서 크기"},isSelected:{control:"boolean",description:"선택 상태"},onClick:{action:"clicked",description:"클릭 이벤트 핸들러"}},decorators:[Story=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{padding:"1rem"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(Story,null))]},Default={args:{color:"white",size:"medium",isSelected:!1},decorators:[Story=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(AllProviders,{theme:"light"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(Story,null))]},Selected={args:{color:"white",size:"medium",isSelected:!0},decorators:[Story=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(AllProviders,{theme:"light"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(Story,null))]},DarkMode={args:{color:"white",size:"medium",isSelected:!1},decorators:[Story=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(AllProviders,{theme:"dark"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{padding:"1rem",backgroundColor:"#333",borderRadius:"8px"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(Story,null)))],parameters:{backgrounds:{default:"dark"}}},PurpleCursor={args:{color:"purple",size:"medium",isSelected:!1},decorators:[Story=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(AllProviders,{theme:"light"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(Story,null))]},SmallSize={args:{color:"white",size:"small",isSelected:!1},decorators:[Story=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(AllProviders,{theme:"light"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(Story,null))]},LargeSize={args:{color:"white",size:"large",isSelected:!1},decorators:[Story=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(AllProviders,{theme:"light"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(Story,null))]},ColorGrid={render:()=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"grid grid-cols-3 gap-4"},["white","purple","yellow","mint","pink","black"].map((color=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(MockedCursorButton,{key:color,color,size:"medium",isSelected:"purple"===color,onClick:()=>console.log(`${color} 커서 클릭`)})))),decorators:[Story=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(AllProviders,{theme:"light"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(Story,null))]},__namedExportsOrder=["Default","Selected","DarkMode","PurpleCursor","SmallSize","LargeSize","ColorGrid"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  args: {\n    color: "white",\n    size: "medium",\n    isSelected: false\n  },\n  decorators: [Story => <AllProviders theme="light">\n                <Story />\n            </AllProviders>]\n}',...Default.parameters?.docs?.source}}},Selected.parameters={...Selected.parameters,docs:{...Selected.parameters?.docs,source:{originalSource:'{\n  args: {\n    color: "white",\n    size: "medium",\n    isSelected: true\n  },\n  decorators: [Story => <AllProviders theme="light">\n                <Story />\n            </AllProviders>]\n}',...Selected.parameters?.docs?.source}}},DarkMode.parameters={...DarkMode.parameters,docs:{...DarkMode.parameters?.docs,source:{originalSource:'{\n  args: {\n    color: "white",\n    size: "medium",\n    isSelected: false\n  },\n  decorators: [Story => <AllProviders theme="dark">\n                <div style={{\n      padding: "1rem",\n      backgroundColor: "#333",\n      borderRadius: "8px"\n    }}>\n                    <Story />\n                </div>\n            </AllProviders>],\n  parameters: {\n    backgrounds: {\n      default: "dark"\n    }\n  }\n}',...DarkMode.parameters?.docs?.source}}},PurpleCursor.parameters={...PurpleCursor.parameters,docs:{...PurpleCursor.parameters?.docs,source:{originalSource:'{\n  args: {\n    color: "purple",\n    size: "medium",\n    isSelected: false\n  },\n  decorators: [Story => <AllProviders theme="light">\n                <Story />\n            </AllProviders>]\n}',...PurpleCursor.parameters?.docs?.source}}},SmallSize.parameters={...SmallSize.parameters,docs:{...SmallSize.parameters?.docs,source:{originalSource:'{\n  args: {\n    color: "white",\n    size: "small",\n    isSelected: false\n  },\n  decorators: [Story => <AllProviders theme="light">\n                <Story />\n            </AllProviders>]\n}',...SmallSize.parameters?.docs?.source}}},LargeSize.parameters={...LargeSize.parameters,docs:{...LargeSize.parameters?.docs,source:{originalSource:'{\n  args: {\n    color: "white",\n    size: "large",\n    isSelected: false\n  },\n  decorators: [Story => <AllProviders theme="light">\n                <Story />\n            </AllProviders>]\n}',...LargeSize.parameters?.docs?.source}}},ColorGrid.parameters={...ColorGrid.parameters,docs:{...ColorGrid.parameters?.docs,source:{originalSource:'{\n  render: () => <div className="grid grid-cols-3 gap-4">\n            {["white", "purple", "yellow", "mint", "pink", "black"].map(color => <MockedCursorButton key={color} color={color as any} size="medium" isSelected={color === "purple"} onClick={() => console.log(`${color} 커서 클릭`)} />)}\n        </div>,\n  decorators: [Story => <AllProviders theme="light">\n                <Story />\n            </AllProviders>]\n}',...ColorGrid.parameters?.docs?.source}}}}}]);